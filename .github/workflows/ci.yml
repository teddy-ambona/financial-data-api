---
name: Pipeline
on: [push]

env:
  IMAGE_TAG: 0.1.0

jobs:
  yamllint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install yamllint
        run: |
          python -m pip install --upgrade pip
          pip install yamllint

      - name: Lint with yamllint
        run: |
          make yamllint

  flake8:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install flake8
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Lint with flake8
        run: |
          make flake8

  pydocstyle:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pydocstyle
        run: |
          python -m pip install --upgrade pip
          pip install pydocstyle

      - name: Lint with pydocstyle
        run: |
          make pydocstyle

  safety:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install safety
        run: |
          python -m pip install --upgrade pip
          pip install safety

      - name: Check for python vulnerablities
        run: |
          safety check

  image-misconfiguration:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run Trivy misconfiguration scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: config
          format: table
          exit-code: 1
          vuln-type: security-check
          severity: CRITICAL,HIGH

  build:
    # Build Docker image and upload it to the pipeline artifacts.
    # The image will be re-used in the downstream jobs
    needs: [flake8, pydocstyle, yamllint, safety]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          tags: flask-app:${{ env.IMAGE_TAG }}
          outputs: type=docker,dest=/tmp/flask-app.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: flask-app
          path: /tmp/flask-app.tar

  image-vulnerabilities:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: flask-app
          path: /tmp

      - name: Load Docker image
        run: |
          docker load --input /tmp/flask-app.tar
          docker image ls -a

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: flask-app:${{ env.IMAGE_TAG }}
          format: table
          exit-code: 1
          ignore-unfixed: true
          vuln-type: os,library
          severity: CRITICAL,HIGH

  integration-tests:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: flask-app
          path: /tmp

      - name: Load Docker image
        run: |
          docker load --input /tmp/flask-app.tar
          docker image ls -a

      - name: checkout repo
        uses: actions/checkout@v2

      - name: Run integration tests
        run: |
          make IMAGE_TAG=${IMAGE_TAG} integration-tests
